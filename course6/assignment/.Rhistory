library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?cyplot
?xyplot
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data - airquality, facets = . ~ Month)
str(airquality)
airquality$Month
qplot(Wind, Ozone, data - airquality, facets = . ~ Month)
?llines
?points
?text
par(mar = c(0, 0, 0, 0))
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataFrame <- data.frame(x = x, y = y)
dist(dataFrame)
distxy <- dist(dataFrame)
hClustering <- hclust(distxy)
plot(hClustering)
dev.off()
distxy <- dist(dataFrame)
hClustering <- hclust(distxy)
plot(hClustering)
text( x=x, y=y[hclust$order]-(max(hclust$height)*hang), labels=lab[hclust$order], col=lab.col[hclust$order], srt=90, adj=c(1,0.5), xpd=NA, ... )}
myplclust <- function( hclust, lab=hclust$labels, lab.col=rep(1,length(hclust$labels)), hang=0.1,...){
## modifiction of plclust for plotting hclust objects *in colour*!
## Copyright Eva KF Chan 2009
## Arguments:
##    hclust:    hclust object
##    lab:        a character vector of labels of the leaves of the tree
##    lab.col:    colour for the labels; NA=default device foreground colour
##    hang:     as in hclust & plclust
## Side effect:
##    A display of hierarchical cluster with coloured leaf labels.
y <- rep(hclust$height,2)
x <- as.numeric(hclust$merge)
y <- y[which(x<0)]
x <- x[which(x<0)]
x <- abs(x)
y <- y[order(x)]
x <- x[order(x)]
plot( hclust, labels=FALSE, hang=hang, ... )
text( x=x, y=y[hclust$order]-(max(hclust$height)*hang), labels=lab[hclust$order], col=lab.col[hclust$order], srt=90, adj=c(1,0.5), xpd=NA, ... )}
myplclust(hClustering, lab = rep(1:3, each = 4), lab.col = rep(1:3, each = 4))
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
heatmap(dataMatrix)
graY(0.5)
gray(0.5)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(0.5)
pal(seq(0, 1, len = 10))
pal <- colorRampPalette(c("red", "yellow"))
pal(2)
pal(10)
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
image(volcano, col = pal(20))
x <- rnorm(10000)
y <- rnorm(10000)
smoothScatter(x, y)
x <- rnorm(1000)
y <- rnorm(1000)
plot(x, y, pch = 19)
plot(x, y, col = rgb(0, 0, 0, 0.2), pch = 19)
library(swirl)
swirl()
dim(ssd)
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dimensions(sub1)
dim(sub1)
names(sub1[, 1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[, 1:3])
hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[, 10:12])
mdist
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[, -c(562, 563)]))
svd1$u
dim(svd1$u)
maxCon <- which.max(svd1$v[, 2])
mdist <- dist(sub1[, c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$centers[laying, 1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[, 1:3])
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown, 1:12], pch = 19, ylab = "Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1)
)
negative <- x1 < 0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
intersect(site0, site1)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
plot(dates0, x0sub, pch = 20)
abline(h = median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(names(mn0), mean = mn0)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(0.5, 2.5)))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y, ]
library(swirl)
swirl()
33/36
deck
52
1/13
0
3/13
2/51
library(swirl)
swirl()
0.64
0.64
mypdf
integrate(mypdf, 0, 1.6)
sqrt(2)
0.997*0.001
0.015*0.999
0.000997 / (0.000997 + 0.014985)
3.5
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
.5 * (edh + edl)
integrate(myfunc, 0, 2)
spop
mean(spop)
allsam
apply(allsam, 1, mean)
mean(smeans)
library(swirl)
swirl()
dice_sqr
ex2_fair <- sum(dice_sqr * dice_fair)
ex2_fair - 3.5^2
sum(dice_sqr * dice_high) - edh^2
?matrix
?apply
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
library(swirl)
swirl()
1 - choose(5, 1) * 0.8^1 * 0.2^4 - choose(5, 2) * 0.8^2 * 0.2^3
choose(5,3)*(.8)^3*(.2)^2 + choose(5,4)*(.8)^4*(.2)^1 + choose(5,5)*(.8)^5*(.2)^0
?pbinom
pbinom(2, 5, .8, lower.tail = FALSE)
qnorm(0.1)
0
qnorm(0.975, 3, 2)
3 + 2*1.96
pnorm(1200, 1020, 50, lower.tail = FALSE)
pnorm((1200 - 1020)/50, lower.tail = FALSE)
qnorm(0.75, 1020, 50)
0.53
0.53
ppois(3, 2.5*4)
pbinom(5, 1000, .01)
ppois(5, 10)
ppois(5, 1000*.01)
coinPlot(10)
coinPlot(10000)
qnorm(0.95)
0.6 + c(-1, 1) * qnorm(0.975) * sqrt(0.6(1-0.6)/100)
0.6 + c(-1, 1) * qnorm(0.975) * sqrt(0.6*(1-0.6)/100)
x$conf.int
binom.test(60, 100)$conf.int
mywald(.2)
ACCompar(20)
lamb <- 5/94.32
lamb + c(-1, 1) * qnorm(.975) * sqrt(lamb/94.32)
poisson.test(5, 94.32)$conf
choose(5, 4)
choose(5, 5)
6*0.5^5
ppois(10, 15)
qnorm(0.95)
7.5*1.645
library(swirl)
swirl()
myplot(2)
myplot(20)
myplot2(2)
qt(.975, 2)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g2 - g1
mean(difference)
s <- sd(difference)
1.58 + c(-1, 1) * qt(.975, 9) * s /sqrt(10)
mn + c(-1, 1) * qt(.975, 9) * s /sqrt(10)
t.test(difference)$conf.int
sp <- 7*15.34^2 + 20*18.23^2
ns <- 27
sp <- sp/ns
sp <- sqrt(sp/ns)
132.86 - 127.44 + c(-1, 1) * qt(.975, ns) * sp * sqrt(1/8 + 1/21)
sp <- sqrt((9*var(g1) + 9*var(g2))/18)
md + c(-1, 1) * qt(.975, 18) * sqrt(1/5)
md + c(-1, 1) * qt(.975, 18) * sp * sqrt(1/5)
t.test(g2, g1, paired = FALSE, var.equal = TRUE)$conf
t.test(g2, g1, paired = TRUE)$conf
num <- (15.34^2/8 + 18.23^2/21)^2
den <- (15.34^2/8)^2/7 + (18.23^2/21)^2/20
mydf <- num/den
132.86 - 127.44 + c(-1, 1) * qt(.975, mydf) * sqrt(15.34^2/8 + 18.23^2/21)
library(swirl)
swirl()
head(pValues)
sum(pValues < 0.05)
sum(p.adjust(pValues, method = "bonferroni") < 0.05)
sum(p.adjust(pValues, method = "BH") < 0.05)
tail(trueStatus)
table(pValues2<.05, trueStatus)
24/500*100
24/500
table(p.adjust(pValues2, method = "bonferroni") < 0.05, trueStatus)
table(p.adjust(pValues2, method = "BH") < 0.05, trueStatus)
library(swirl)
swirl()
sum(1:6)/6
print(g2)
head(sh)
nh
median(resampledMedians)
median(sh)
sam <- sample(fh, nh*B, replace = TRUE)
resam <- matrix(sam, B, nh)
apply(resam, 1, median)
meds <- apply(resam, 1, median)
median(fh) - median(meds)
sd(meds)
sd(resampledMedians)
quantile(resampledMedians, c(.025, .975))
quantile(meds, c(.025, .975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCcounts
group
testStat
obs <- testStat(BCcounts, group)
obs
mean(Bdata$count) - mean(Cdata$count)
sample(group)
perms <- sapply(1:10000, function(i) testStat(BCcounts, sample(group)))
perms > obs
mean(perms > obs)
testStat(DEcounts, group)
perms <- sapply(1 : 10000, function(i) testStat(DEcounts,
| sample(group)))
sapply(1 : 10000, function(i) testStat(DEcounts, sample(group)))
perms <- sapply(1 : 10000, function(i) testStat(DEcounts, sample(group)))
-17/5
qnorm(-3.4)
pnorm(-3.4)
pt(-3.4, 4)*2
pt(-3.4, 4)
pt(0, 4)
?t.test
x <- c(-8, -3, 1, -2, -5)
sd(x)
mean9x
mean(x)
pt(mean(x)/sd(x)*sqrt(5), 4)*2
t.test(x, paired = TRUE)
t.test(x)
t.test(x, alternative = "two.sided")
t.test(x, alternative = "one.sided")
t.test(x, alternative = "less")
1100-10*qt(.525, 8)
1100-10*qt(.975, 8)
1100 + c(-1, 1) * qt(.975, 8) * 10
y <- c(1, -1, 1, 1)
t.test(y, alternative = "greater")
?pbinom
pbinom(2, size = 4, prob = 0.75, lower.tail = FALSE)
pbinom(1000, size = 2000, prob = 0.75, lower.tail = FALSE)
pbinom(2, size = 1, prob = 0.75, lower.tail = FALSE)
pbinom(1, size = 1, prob = 0.75, lower.tail = FALSE)
pbinom(2, size = 4, prob = 0.5, lower.tail = FALSE)
0.5^4
1-0.0625
choose(4, 2)
choose(4, 3)
choose(4, 2) + choose(4, 3) + choose(4, 4)
11*0.0625
5*0.0625
pbinom(2, size = 4, prob = 0.5, lower.tail = FALSE)
?ppois
ppois(10/1787, lambda = 1/100, lower.tail = TRUE)
ppois(1000/1787, lambda = 1, lower.tail = TRUE)
ppois(10, lambda = 1*1787/100, lower.tail = TRUE)
?t.test
s <- sqrt((8*1.5^2 + 8*1.8^2)/16)
s <- s*sqrt(1/9 + 1/9)
s
-4/s
pnorm(-4/2, lower.tail = TRUE)
pnorm(-4/2, lower.tail = TRUE)*2
?power.t.test
power.t.test(n = 100, delta = 0.01, sd = 0.04, sig.level = 0.05, alternative = "one.sided")$power
power.t.test(n = 100, delta = 0.01, sd = 0.04, sig.level = 0.05, type = "paired", alternative = "one.sided")$power
power.t.test(power = 0.9, delta = 0.01, sd = 0.04, sig.level = 0.05, type = "paired", alternative = "one.sided")$n
pnorm(-4/s, lower.tail = TRUE)*2
pt(-4/s, 16, lower.tail = TRUE)*2
a <- qnorm(0.9, mean = 0.01, sd = 0.04)
a
qnorm(0.95)
qnorm(0.95)/a*0.04
qnorm(0.9)
qnorm(0.95)/a*0.04
a <- qnorm(0.9, mean = 0.01, sd = 0.04)
a
a
a <- qnorm(0.1, mean = 0.01, sd = 0.04)
a
a <- qnorm(0.1, mean = 0.01, sd = 0.04)
pnorm(a, mean = 0.01, sd = 0.04, lower.tail = FALSE)
a
qnorm(.95)/a*0.04
rexp(2, 1)
rexp(3, 1)
lambda = 0.2
n = 40
K = 1000
data("ToothGrowth")
str(ToothGrowth)
with(ToothGrowth, plot(supp, len))
with(ToothGrowth, plot(dose, len))
View(ToothGrowth)
?ToothGrowth
setwd("C:/Users/user/Desktop/datasciencecoursera/course6/assignment")
data(ToothGrowth)
str(ToothGrowth)
attach(ToothGrowth)
plot(supp, len)
plot(dose, len)
table(supp, dose)
summary(ToothGrowth)
?ToothGrowth
View(ToothGrowth)
plot(supp, len)
?t.test
sd(supp)
sd(dose)
sd(dose == 0.5)
sd(dose == 1.0)
sd(dose == 2.0)
sd(dose)
subset(ToothGrowth, dose == 0.5)
subset(dose == 0.5)
sd(subset(ToothGrowth, dose == 0.5))
sd(subset(ToothGrowth$dose, dose == 0.5))
sd(subset(ToothGrowth, dose == 0.5)$dose)
sd(subset(ToothGrowth, dose == 0.5)$len)
sd(subset(ToothGrowth, dose == 1.0)$len)
sd(subset(ToothGrowth, dose == 2.0)$len)
sd(subset(ToothGrowth, supp == VC)$len)
sd(subset(ToothGrowth, supp == 'VC')$len)
sd(subset(ToothGrowth, supp == 'OJ')$len)
mine.6 = 10
suppVC <- subset(ToothGrowth, supp == 'VC')$len
suppOJ <- subset(ToothGrowth, supp == 'OJ')$len
sd(suppVC)
t.test(suppVC, suppOJ, alternative = "two.sided", paired = FALSE, var.equal = FALSE)
t.test(suppVC, suppOJ, alternative = "two.sided", paired = FALSE, var.equal = FALSE)$conf
t.test(suppVC, suppOJ, alternative = "two.sided", paired = FALSE, var.equal = FALSE)$conf.level
t.test(suppVC, suppOJ, alternative = "two.sided", paired = FALSE, var.equal = FALSE)$conf
suppVC
suppVC-suppOJ
mean(suppVC-suppOJ)
mean(suppVC) - mean(suppOJ) + c(-1, 1) * qt(.975, 58) * sqrt(sd(suppVC)^2/30 + sd(suppOJ)^2/30)
mean(suppVC) - mean(suppOJ) + c(-1, 1) * qt(.975, 58) * sqrt(sd(suppVC)^2/30 + sd(suppOJ)^2/30)
df <- (sd(suppVC)^2/30 + sd(suppOJ)^2/30)^2/(sd(suppVC)^4/30^2/29 + sd(suppVC)^4/30^2/29)
df
mean(suppVC) - mean(suppOJ) + c(-1, 1) * qt(.975, df) * sqrt(sd(suppVC)^2/30 + sd(suppOJ)^2/30)
t.test(suppVC-suppOJ)
t.test(suppVC-suppOJ, alternative = "two.sided", paired = FALSE, var.equal = FALSE)
mean(suppVC) - mean(suppOJ) + c(-1, 1) * qt(.975, df) * sqrt(sd(suppVC)^2/30 + sd(suppOJ)^2/30)
t.test(suppVC, suppOJ, alternative = "two.sided", paired = FALSE, var.equal = FALSE)$conf
df <- (sd(suppVC)^2/30 + sd(suppOJ)^2/30)^2/(sd(suppVC)^4/30^2/29 + sd(suppVC)^4/30^2/29)
mean(suppVC) - mean(suppOJ) + c(-1, 1) * qt(.975, df) * sqrt(sd(suppVC)^2/30 + sd(suppOJ)^2/30)
t.test(suppVC, suppOJ, alternative = "two.sided", paired = FALSE, var.equal = FALSE)$conf
suppVC
suppOJ
mean(suppVC) - mean(suppOJ) + c(-1, 1) * qt(.95, df) * sqrt(sd(suppVC)^2/30 + sd(suppOJ)^2/30)
mean(suppVC) - mean(suppOJ) + c(-1, 1) * qt(.9875, df) * sqrt(sd(suppVC)^2/30 + sd(suppOJ)^2/30)
mean(suppVC) - mean(suppOJ) + c(-1, 1) * qt(.975, df) * sqrt(sd(suppVC)^2/30 + sd(suppOJ)^2/30)
t.test(suppVC, suppOJ, alternative = "two.sided", paired = FALSE, var.equal = FALSE)$conf
t.test(suppVC, suppOJ, alternative = "two.sided", paired = FALSE, var.equal = FALSE)
mean(suppVC) - mean(suppOJ) + c(-1, 1) * qt(.975, 55.309) * sqrt(sd(suppVC)^2/30 + sd(suppOJ)^2/30)
df
s1 <- sd(suppVC)
s2 <- sd)suppOJ
s2 <- sd(suppOJ)
n1 <- 30
n2 <- 30
df <- (s1^2/n1 + s2^2/n2)^2 / (s1^4/n1^2/(n1-1) + s2^4/n2^2/(n2-1))
df
df <- (sd(suppVC)^2/30 + sd(suppOJ)^2/30)^2/(sd(suppVC)^4/30^2/29 + sd(suppVC)^4/30^2/29)
df
df <- (sd(suppVC)^2/30 + sd(suppOJ)^2/30)^2 / (sd(suppVC)^4/30^2/29 + sd(suppVC)^4/30^2/29)
df
df <- (s1^2/n1 + s2^2/n2)^2 / (s1^4/n1^2/(n1-1) + s2^4/n2^2/(n2-1))
df
n1
n2
df <- (sd(suppVC)^2/30 + sd(suppOJ)^2/30)^2 / (sd(suppVC)^4/30^2/29 + sd(suppOJ)^4/30^2/29)
df
mean(suppVC) - mean(suppOJ) + c(-1, 1) * qt(.975, df) * sqrt(sd(suppVC)^2/30 + sd(suppOJ)^2/30)
t.test(suppVC, suppOJ, alternative = "two.sided", paired = FALSE, var.equal = FALSE)
t.test(suppVC, suppOJ, alternative = "two.sided", paired = FALSE, var.equal = FALSE)$conf
t.test(suppVC, suppOJ, alternative = "one.sided", paired = FALSE, var.equal = FALSE)$conf
t.test(suppVC, suppOJ, alternative = "less", paired = FALSE, var.equal = FALSE)$conf
