## Skip the first 20 interations
next
}
print(i)
}
q()
add2 <- function(x,y) {
x + y
}
add2(3, 5)
above10 <- function(x) {
use <- x > 10
x[use]
}
above <- function(x, n) {
use <- x > n
x[use]
}
x < 1:20
x <- 1:20
above(x, 12)
above(x, 15)
above <- function(x, n = 10) {
use <- x > n
x[use]
}
above(x)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[ , i])
}
means
}
columnmean(airquality)
?removena
?no.na
?mean
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[ , i], na.rm = removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality, FALSE)
mean
showmethods(mean)
showMethods(mean)
methods(mean)
?methods
edit(mean)
getMethod(mean)
stats::mean
stats:::mean
class(mean)
t
t(1:10)
stats:::mean
getAnywhere(mean)
base:::mean
debug(mean)
body(mean)
UseMethod(mean)
methods(mean)
base:::mean.Date
formals(mean)
mydata <- rnorm(100)
sd(mydata)
sd(x = mydata)
sd(x = mydata, na.rm = FALSE)
sd(na.rm = FALSE, x = mydata)
sd(na.rm = FALSE, mydata)
?sd
sd(y = mydata)
args(lm)
?lm
lm(data = mydata, y-x, model = FALSE, 1:100)
lm(data = mydata, y - x, model = FALSE, 1:100)
f <- function(a, b) {
a^2
}
f(2)
f(3, 0)
f(3, Inf)
f(3, NaN)
f <- function(a,b) {
print(a)
print(b)
}
f(45)
mean
args(paste)
args(cat)
paste("a", "b", sep = ":")
paste("a", "b", se = ":")
library(swirl)
rm(list = ls())
swirl()
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function('My first function!')
boring_function
UseMethodd
UseMethod
submit()
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[3]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Hello world one string", "Hello", "World", "Three Strings")
submit()
mad_libs(London, slippery, mouse)
mad_libs("London", "slippery", "mouse")
mad_libs(place = "London", adjective = "slippery", noun = "mouse")
mad_libs(place = "London", 1.1, adjective = "slippery", FALSE, noun = "mouse", "ten")
submit()
"I" %p% "love" %p% "R!"
lm
search()
make.power <- function(n) {
pow <- function(x) {
x^n
}
pow
}
cube <- make.power(3)
square <- make.power(2)
cube(3)
square(3)
ls(environment(cube))
environment(cube)
get("n", environment(cube))
ls(environment(square))
get("n", environment(square))
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x + y
}
f(3)
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x * y
}
f(3)
?"<<-"
x <- as.Date("1970-01-01")
x
class(x)
unclass(x)
unclass(as.Date("1970-01-05"))
?as.Date
weekdays(as.Date("1970-01-01"))
x <- Sys.time()
x
p <- as.POSIX1t(x)
p <- as.POSIXlt(x)
p
class(x)
class(p)
names(unclass(p))
p$sec
names(unclass(x))
unclass(x)
x$sec
p$sec
datestring <- c("January 10, 2012 10:40", "December 9, 2011 9:10")
x <- strptime(datestring, "%B %d, %Y %H:%M")
x
class(x)
?strptime
x <- as.Date("2012-01-01")
y <- strptime("9 Jan 2011 11:34:21", "%d %B %Y %H:%M:%S")
x-y
x <- as.POSIXlt(x)
x-y
x <- as.Date("2012-03-01")
y <- as.Date("2012-02-28")
x-y
y-x
x <- as.POSIXct("2012-10-25 01:00:00")
y <- as.POSIXct("2012-10-25 06:00:00", tz = "GMT")
y-x
x <- as.POSIXct("2012-10-25 01:00:00", tz = "EST")
y-x
x <- as.POSIXct("2012-10-25 01:00:00", tz = "EDT")
q()
library(swirl)
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarter(t2)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
install.packages("lubridate")
q()
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x > 5
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
class(f)
q()
setwd("C:/Users/user/Desktop/datasciencecoursera/course2")
all_files <- list.files("specdata")
subset_files <- all_files[30:25]
combined_data <- data.frame("Date" = character(0), "sulfate" = numeric(0), "nitrate" = numeric(0), "ID" = integer(0))
setwd(directory)
for(i in 1:length(subset_files)) {
combined_data <- rbind(combined_data, read.csv(subset_files[i]))
setwd("specdata")
for(i in 1:length(subset_files)) {
combined_data <- rbind(combined_data, read.csv(subset_files[i]))
setwd("specdata")
for(i in 1:length(subset_files)) {
combined_data <- rbind(combined_data, read.csv(subset_files[i]))
setwd("specdata")
for(i in 1:length(subset_files)) {
combined_data <- rbind(combined_data, read.csv(subset_files[i]))
for(i in 1:length(subset_files)) {
combined_data <- rbind(combined_data, read.csv(subset_files[i]))
}
View(combined_data)
TRUE & FALSE
TRUE & TRUE
FALSE & FALSE
?&
?"&"
sum(!is.na(combined_data(sulfate)))
sum(!is.na(combined_data[[sulfate]]))
class(combined_data)
class(combined_data$sulfate)
sum(!is.na(combined_data$sulfate))
a <- c(TRUE, FALSE, TRUE, FALSE)
b <- c(TRUE, TRUE, FALSE, FALSE)
a & b
sum(a & b)
sum(!is.na(combined_data$sulfate) & !is.na(combined_data$nitrate))
m <- c(1, 3, 7)
n <- c(5.34, 2.78, 2.33)
cbind(m, n)
class(cbind(m, n))
?data.frame
data.frame(m, n)
combined_data$ID[1]
o <- numeric(0)
o[1] <- 5
o
o[2] <- 7
o
source("complete.R")
complete("specdata", 1)
getwd()
setwd(C:/Users/user/Desktop/datasciencecoursera/course2)
setwd("C:/Users/user/Desktop/datasciencecoursera/course2")
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
?cor
x <- c(1, 4, 8)
y <- c(3.45, 2.67, 3.46)
z <- c(4.92, 1.03, 4.29)
data.frame(x, y, z)
m <- data.frame(x, y, z)
cor(m)
cor(y, z)
z <- c(4.92, NA, 1.03, 4.29)
y <- c(NA, 3.45, 2.67, 3.46)
x <- c(1, 4, 8, NA)
m <- data.frame(x, y, z)
m
corr(y, z)
cor(y, z)
cor(y, z, na.rm = TRUE)
m$y
m$y > 3
1:1
1:0
setwd("C:/Users/user/Desktop/datasciencecoursera/course2")
all_files <- list.files("specdata")
?rep
p <- rep(FALSE, 332)
all_files[p]
q <- all_files[p]
length(q)
all_files[0]
correlations <- numeric(0)
subset_files <- p
subset_files <- q
setwd("specdata")
for(i in 1:length(subset_files)) {
tempdata <- read.csv(subset_files[i])
no_na <- !is.na(tempdata$sulfate) & !is.na(tempdata$nitrate)
correlations[i] <- cor(tempdata$sulfate[no_na], tempdata$nitrate[no_na])
}
1:length(subset_files)
tempdata <- read.csv(subset_files[1])
subset_files[1]
?all
all(p)
!all(p)
all(!p)
lengthsubset_files
length(subset_files)
if(length(subset_files = 0)) {
numeric(0)
}
if(length(subset_files) = 0) {
numeric(0)
}
if(length(subset_files) == 0) {
numeric(0)
}
setwd("C:/Users/user/Desktop/datasciencecoursera/course2")
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
setwd("C:/Users/user/Desktop/datasciencecoursera/course2")
source("complete.R")
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
setwd("C:/Users/user/Desktop/datasciencecoursera/course2")
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
setwd("C:/Users/user/Desktop/datasciencecoursera/course2")
source("corr.R")
source("complete.R")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
RNGversion("3.5.1")
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
RNGversion("3.5.1")
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
cr <- corr("specdata")
cr <- sort(cr)
RNGversion("3.5.1")
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata")
cr <- sort(cr)
RNGversion("3.5.1")
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
RNGversion("3.5.1")
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
RNGversion("3.5.1")
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
RNGversion("3.5.1")
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
paste(directory, "/", formatC(id, width=3, flag="0"), ".csv", sep="")
paste("test", "/", formatC(id, width=3, flag="0"), ".csv", sep="")
paste("test", "/", formatC(c(1, 2, 3), width=3, flag="0"), ".csv", sep="")
?paste
?formatC
?complete.cases
q(n)
